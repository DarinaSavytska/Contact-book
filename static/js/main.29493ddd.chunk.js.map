{"version":3,"sources":["api/api.ts","components/CurrentUser/CurrentUser.tsx","components/UsersList/UsersList.tsx","App.tsx","index.js"],"names":["API_URL","getAllUsers","a","fetch","then","result","json","getUserById","userId","CurrentUser","state","user","userError","loadUser","props","setState","this","prevProps","className","id","name","email","phone","type","onClick","onClear","React","Component","UsersList","titleSearch","sortBy","getSearchUser","users","filter","toLowerCase","includes","getSortUser","sort","user1","user2","localeCompare","handleInputChange","event","target","value","handleSelectedChange","selectedUserId","usersSorted","usersBySearch","placeholder","onChange","disabled","map","username","App","unselectUser","selectUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.29493ddd.chunk.js","sourcesContent":["import { User } from \"../react-app-env\";\r\n\r\nconst API_URL = 'https://mate.academy/students-api/users/';\r\n\r\nexport const getAllUsers = async (): Promise<User[]> => {\r\n  return fetch(API_URL).then(result => result.json());\r\n};\r\n\r\nexport const getUserById = (userId: number) => {\r\n  return fetch(`${API_URL}${userId}`)\r\n    .then(result => result.json());\r\n};\r\n","import React from 'react';\r\n// import './CurrentUser.scss';\r\nimport { getUserById } from '../../api/api';\r\nimport { User } from '../../react-app-env';\r\n\r\ntype Props = {\r\n  userId: number,\r\n  onClear: () => void,\r\n};\r\n\r\ntype State = {\r\n  user: User | null,\r\n  userError: boolean,\r\n};\r\n\r\nexport class CurrentUser extends React.Component<Props, State> {\r\n  state: State = {\r\n    user: {} as User,\r\n    userError: false,\r\n  }\r\n\r\n  loadUser = async () => {\r\n    try {\r\n      const user = await getUserById(this.props.userId);\r\n\r\n      this.setState({\r\n        user,\r\n        userError: false,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        userError: true,\r\n      })\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.loadUser();\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    if (this.props.userId !== prevProps.userId) {\r\n      this.loadUser();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { user, userError } = this.state;\r\n\r\n    return (\r\n      !userError ? (\r\n        <div className=\"CurrentUser\">\r\n          <h2 className=\"CurrentUser__title\">\r\n            <span>\r\n              {`Selected User: ${user?.id}`}\r\n            </span>\r\n          </h2>\r\n\r\n          <h3 className=\"CurrentUser__name\">\r\n            {user?.name}\r\n          </h3>\r\n\r\n          <p className=\"CurrentUser__email\">\r\n            {user?.email}\r\n          </p>\r\n\r\n          <p className=\"CurrentUser__phone\">\r\n            {user?.phone}\r\n          </p>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"button\"\r\n            onClick={() => {\r\n              this.props.onClear()\r\n            }}\r\n          >\r\n            Clear user\r\n          </button>\r\n        </div>\r\n      )\r\n        : (\r\n          `User id #${this.props.userId} not found`\r\n        )\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { User } from \"../../react-app-env\";\r\n// import './UsersList.scss';\r\n\r\ntype Props = {\r\n  users: User[],\r\n  selectedUserId: (userId: number) => void,\r\n};\r\n\r\ntype State = {\r\n  titleSearch: string,\r\n  sortBy: string,\r\n};\r\n\r\nexport class UsersList extends React.Component<Props, State> {\r\n  state: State = {\r\n    titleSearch: '',\r\n    sortBy: 'reset',\r\n  }\r\n\r\n  getSearchUser = (users: User[]) => {\r\n    const { titleSearch } = this.state;\r\n\r\n    if (titleSearch) {\r\n      return users.filter(user => user.name.toLowerCase().includes(titleSearch.toLowerCase()));\r\n    }\r\n\r\n    return users;\r\n  };\r\n\r\n  getSortUser = (users: User[]) => {\r\n    const { sortBy } = this.state;\r\n    switch (sortBy) {\r\n      case 'Sort A-Z':\r\n        return users.sort((user1, user2) => user1.name.localeCompare(user2.name));\r\n\r\n      case 'Sort Z-A':\r\n        return users.sort((user1, user2) => user2.name.localeCompare(user1.name));\r\n\r\n      default:\r\n        return this.props.users;\r\n    }\r\n  };\r\n\r\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      titleSearch: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSelectedChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    this.setState({\r\n      sortBy: event.target.value,\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const { users, selectedUserId } = this.props;\r\n    const { titleSearch, sortBy } = this.state;\r\n    const usersSorted = this.getSortUser(users);\r\n    const usersBySearch = this.getSearchUser(usersSorted);\r\n\r\n    return (\r\n      <div className=\"UsersList\">\r\n        <h2>Users:</h2>\r\n\r\n        <input\r\n          type=\"text\"\r\n          name=\"sortByText\"\r\n          id=\"sortByText\"\r\n          placeholder=\"Search user\"\r\n          value={titleSearch}\r\n          onChange={this.handleInputChange}\r\n        />\r\n\r\n        <select\r\n          name=\"sortBySelected\"\r\n          id=\"sortBySelected\"\r\n          value={sortBy}\r\n          onChange={this.handleSelectedChange}\r\n        >\r\n          <option value=\"reset\" disabled>\r\n            Reset sort\r\n          </option>\r\n\r\n          <option value=\"Sort A-Z\">\r\n            Sort by A-Z\r\n          </option>\r\n\r\n          <option value=\"Sort Z-A\">\r\n            Sort by Z-A\r\n          </option>\r\n        </select>\r\n\r\n        <div className=\"UsersList__list-container\">\r\n          <ul className=\"UsersList__list\">\r\n            {usersBySearch.map(user => (\r\n              user.username &&\r\n                <li\r\n                  key={user.id}\r\n                  className=\"UsersList__item\"\r\n                >\r\n                  {user.name}\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => selectedUserId(user.id)}\r\n                  >\r\n                    More\r\n                  </button>\r\n                </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from \"react\";\nimport { CurrentUser } from \"./components/CurrentUser/CurrentUser\";\n// import './App/scss';\nimport { getAllUsers, getUserById } from \"./api/api\";\nimport { User } from \"./react-app-env\";\nimport { UsersList } from \"./components/UsersList/UsersList\";\n\ninterface State {\n  selectedUserId: number,\n  users: User[],\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n    users: [],\n  }\n\n  async componentDidMount() {\n    const users = await getAllUsers();\n\n    this.setState({ users });\n  }\n\n  unselectUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    })\n  };\n\n  selectUser = (userId: number) => {\n    this.setState({ selectedUserId: userId })\n  };\n\n  render() {\n    const { selectedUserId, users } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__allUser\">\n          <UsersList\n            users={users}\n            selectedUserId={this.selectUser}\n          />\n        </div>\n\n        <div className=\"App__selectedUser\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                onClear={this.unselectUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}