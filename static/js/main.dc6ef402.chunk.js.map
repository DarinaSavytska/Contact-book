{"version":3,"sources":["api/api.ts","components/CurrentUser/CurrentUser.tsx","components/UsersList/UsersList.tsx","components/Modal/Modal.tsx","App.tsx","index.js"],"names":["API_URL","getAllUsers","a","fetch","then","result","json","getUserById","userId","CurrentUser","state","user","userError","loadUser","props","setState","this","prevProps","className","id","name","email","phone","username","website","type","onClick","onClear","React","Component","UsersList","titleSearch","sortBy","getSearchUser","users","filter","toLowerCase","includes","getSortUser","sort","user1","user2","localeCompare","handleInputChange","event","target","value","handleSelectedChange","selectedUserId","setModalVisible","usersSorted","usersBySearch","placeholder","onChange","disabled","map","Modal","visible","setModalUnvisible","deleteUser","addUser","el","stopPropagation","App","deleteUserId","modaleVisible","removeUser","unselectUser","selectUser","prevState","person","some","prevUsers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc6ef402.chunk.js","sourcesContent":["import { User } from \"../react-app-env\";\r\n\r\nconst API_URL = 'https://mate.academy/students-api/users/';\r\n\r\nexport const getAllUsers = async (): Promise<User[]> => {\r\n  return fetch(API_URL).then(result => result.json());\r\n};\r\n\r\nexport const getUserById = (userId: number) => {\r\n  return fetch(`${API_URL}${userId}`)\r\n    .then(result => result.json());\r\n};\r\n","import React from 'react';\r\nimport './CurrentUser.scss';\r\nimport { getUserById } from '../../api/api';\r\nimport { User } from '../../react-app-env';\r\n\r\ntype Props = {\r\n  userId: number,\r\n  onClear: () => void,\r\n};\r\n\r\ntype State = {\r\n  user: User | null,\r\n  userError: boolean,\r\n};\r\n\r\nexport class CurrentUser extends React.Component<Props, State> {\r\n  state: State = {\r\n    user: {} as User,\r\n    userError: false,\r\n  }\r\n\r\n  loadUser = async () => {\r\n    try {\r\n      const user = await getUserById(this.props.userId);\r\n\r\n      this.setState({\r\n        user,\r\n        userError: false,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        userError: true,\r\n      })\r\n    }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    this.loadUser();\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Props) {\r\n    if (this.props.userId !== prevProps.userId) {\r\n      this.loadUser();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { user, userError } = this.state;\r\n\r\n    return (\r\n      !userError ? (\r\n        <div className=\"CurrentUser\">\r\n          <h2 className=\"CurrentUser__title\">\r\n            <span>\r\n              {`Selected User ID: ${user?.id}`}\r\n            </span>\r\n          </h2>\r\n\r\n          <h3 className=\"CurrentUser__name\">\r\n            {user?.name && `Name: ${user?.name}`}\r\n          </h3>\r\n\r\n          <p className=\"CurrentUser__email\">\r\n            {user?.email && `E-mail: ${user?.email}`}\r\n            <br />\r\n            {user?.phone && `Number: ${user?.phone}`}\r\n            <br />\r\n            {user?.username && `Username: ${user?.username}`}\r\n          </p>\r\n\r\n          <p className=\"CurrentUser__phone\">\r\n            {user?.website && `Website: ${user?.website}`}\r\n          </p>\r\n\r\n          <button\r\n            type=\"button\"\r\n            className=\"button\"\r\n            onClick={() => {\r\n              this.props.onClear()\r\n            }}\r\n          >\r\n            Clear user\r\n          </button>\r\n        </div>\r\n      )\r\n        : (\r\n          `User id #${this.props.userId} not found`\r\n        )\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport { User } from \"../../react-app-env\";\r\nimport './UserList.scss';\r\n\r\ntype Props = {\r\n  users: User[],\r\n  selectedUserId: (userId: number) => void,\r\n  setModalVisible: (userId: number) => void,\r\n};\r\n\r\ntype State = {\r\n  titleSearch: string,\r\n  sortBy: string,\r\n};\r\n\r\nexport class UsersList extends React.Component<Props, State> {\r\n  state: State = {\r\n    titleSearch: '',\r\n    sortBy: 'reset',\r\n  }\r\n\r\n  getSearchUser = (users: User[]) => {\r\n    const { titleSearch } = this.state;\r\n\r\n    if (titleSearch) {\r\n      return users.filter(user => user.name.toLowerCase().includes(titleSearch.toLowerCase()));\r\n    }\r\n\r\n    return users;\r\n  };\r\n\r\n  getSortUser = (users: User[]) => {\r\n    const { sortBy } = this.state;\r\n    switch (sortBy) {\r\n      case 'Sort A-Z':\r\n        return users.sort((user1, user2) => user1.name.localeCompare(user2.name));\r\n\r\n      case 'Sort Z-A':\r\n        return users.sort((user1, user2) => user2.name.localeCompare(user1.name));\r\n\r\n      default:\r\n        return this.props.users;\r\n    }\r\n  };\r\n\r\n  handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      titleSearch: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleSelectedChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    this.setState({\r\n      sortBy: event.target.value,\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const { users, selectedUserId, setModalVisible } = this.props;\r\n    const { titleSearch, sortBy } = this.state;\r\n    const usersSorted = this.getSortUser(users);\r\n    const usersBySearch = this.getSearchUser(usersSorted);\r\n\r\n    return (\r\n      <div className=\"UsersList\">\r\n        <h2 className=\"UsersList__title\">Users:</h2>\r\n\r\n        <input\r\n          type=\"text\"\r\n          name=\"sortByText\"\r\n          id=\"sortByText\"\r\n          className=\"UsersList__search-sort\"\r\n          placeholder=\"Search user\"\r\n          value={titleSearch}\r\n          onChange={this.handleInputChange}\r\n        />\r\n\r\n        <select\r\n          name=\"sortBySelected\"\r\n          id=\"sortBySelected\"\r\n          className=\"UsersList__search-sort\"\r\n          value={sortBy}\r\n          onChange={this.handleSelectedChange}\r\n        >\r\n          <option value=\"reset\" disabled>\r\n            Reset sort\r\n          </option>\r\n\r\n          <option value=\"Sort A-Z\">\r\n            Sort by A-Z\r\n          </option>\r\n\r\n          <option value=\"Sort Z-A\">\r\n            Sort by Z-A\r\n          </option>\r\n        </select>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"button UsersList__search-sort\"\r\n          onClick={() => setModalVisible}\r\n        >\r\n          Add User\r\n        </button>\r\n\r\n        <div className=\"UsersList__list-container\">\r\n          <ul className=\"UsersList__list\">\r\n            {usersBySearch.map(user => (\r\n              user.username &&\r\n              <li\r\n                key={user.id}\r\n                className=\"UsersList__item\"\r\n              >\r\n                {user.name}\r\n\r\n                <div className=\"UsersList__item-button\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"button\"\r\n                    onClick={() => selectedUserId(user.id)}\r\n                  >\r\n                    More\r\n                  </button>\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"button\"\r\n                    onClick={() => setModalVisible(user.id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { useState } from \"react\";\r\nimport { User } from \"../../react-app-env\";\r\nimport './Modal.scss';\r\n\r\ntype Props = {\r\n  visible: boolean,\r\n  setModalUnvisible: () => void,\r\n  addUser: (person: User) => void,\r\n  deleteUser: () => void,\r\n}\r\n\r\nconst Modal: React.FC<Props> = ({ visible, setModalUnvisible, addUser, deleteUser }) => {\r\n  // const [userName, setUserName] = useState('');\r\n  // const [userId, setUserId] = useState('');\r\n  // const [person, setPerson] = useState({} as User);\r\n\r\n  // const handleInputName = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n  //   setUserName(event.target.value);\r\n  // };\r\n\r\n  // const handleInputId = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n  //   setUserId(event.target.value);\r\n  // };\r\n\r\n  const buttonYes = () => {\r\n    deleteUser();\r\n  };\r\n\r\n  const buttonNo = () => {\r\n    setModalUnvisible();\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className='modal'\r\n      onClick={setModalUnvisible}\r\n    >\r\n      <div\r\n        className=\"modal__content\"\r\n        onClick={el => el.stopPropagation()}\r\n      >\r\n        {/* <form\r\n          className=\"modal__form\"\r\n          onSubmit={(event) => {\r\n            event.preventDefault();\r\n            addUser(person);\r\n            setUserName('');\r\n            setModalUnvisible();\r\n          }}\r\n        >\r\n          Name*:\r\n          {' '}\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"name\"\r\n            required\r\n            value={userName}\r\n            onChange={handleInputName}\r\n          />\r\n\r\n          User ID*:\r\n          {' '}\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"ID\"\r\n            required\r\n            value={userId}\r\n            onChange={handleInputId}\r\n          />\r\n\r\n          <button\r\n            className=\"button\"\r\n            type=\"submit\"\r\n          >\r\n            Add User\r\n          </button>\r\n\r\n          <button\r\n            className=\"button\"\r\n            type=\"button\"\r\n            onClick={setModalUnvisible}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </form> */}\r\n\r\n        <p>\r\n          Are yoy shure?\r\n        </p>\r\n\r\n        <button\r\n          className=\"button\"\r\n          type=\"button\"\r\n          onClick={buttonYes}\r\n        >\r\n          Yes\r\n        </button>\r\n\r\n        <button\r\n          className=\"button\"\r\n          type=\"button\"\r\n          onClick={buttonNo}\r\n        >\r\n          No\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from \"react\";\nimport './App.scss';\nimport './styles/general.scss';\nimport { CurrentUser } from \"./components/CurrentUser/CurrentUser\";\nimport { getAllUsers } from \"./api/api\";\nimport { User } from \"./react-app-env\";\nimport { UsersList } from \"./components/UsersList/UsersList\";\nimport Modal from \"./components/Modal/Modal\";\n\ninterface State {\n  selectedUserId: number,\n  deleteUserId: number,\n  users: User[],\n  modaleVisible: boolean,\n  removeUser: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n    deleteUserId: 0,\n    users: [],\n    modaleVisible: false,\n    removeUser: false,\n  }\n\n  async componentDidMount() {\n    const users = await getAllUsers();\n\n    this.setState({ users });\n  }\n\n  unselectUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    })\n  };\n\n  selectUser = (userId: number) => {\n    this.setState({ selectedUserId: userId })\n  };\n\n  deleteUser = () => {\n    this.setState((prevState) => {\n      return {\n        modaleVisible: false,\n        users: prevState.users.filter(user => user.id !== prevState.deleteUserId),\n      };\n    })\n  };\n\n  setModalVisible = (userId: number) => {\n    this.setState({\n      modaleVisible: true,\n      deleteUserId: userId,\n      selectedUserId: this.state.deleteUserId ? 0 : this.state.selectedUserId,\n    });\n  };\n\n  setModalUnvisible = () => {\n    this.setState({\n      modaleVisible: false,\n    });\n  };\n\n  addUser = (person: User) => {\n    if (!this.state.users.some(user => user.id === person.id)) {\n      this.setState((prevUsers => {\n        const { users } = prevUsers;\n\n        return {\n          users: [...users, person],\n        };\n      }));\n    }\n  };\n\n  render() {\n    const { selectedUserId, users, modaleVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__allUser\">\n          <UsersList\n            users={users}\n            selectedUserId={this.selectUser}\n            setModalVisible={this.setModalVisible}\n          />\n        </div>\n\n        <div className=\"App__selectedUser\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                onClear={this.unselectUser}\n              />\n            ) : <p className=\"App__content-container-none\">\n              No user selected\n            </p>\n            }\n          </div>\n\n          {modaleVisible &&\n            <Modal\n              visible={modaleVisible}\n              setModalUnvisible={this.setModalUnvisible}\n              addUser={this.addUser}\n              deleteUser={this.deleteUser}\n            />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}